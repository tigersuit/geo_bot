
import os
import logging

from dotenv import load_dotenv
load_dotenv()

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command, Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from config import API_TOKEN, CALC_FILE
from utils import save_calculation, load_calculations, ADVICES

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

class CalcStates(StatesGroup):
    waiting_for_length = State()
    waiting_for_width = State()
    waiting_for_density = State()
    waiting_for_price = State()

main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üî¢ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á—ë—Ç")],
        [KeyboardButton("üíæ –ú–æ–∏ —Ä–∞—Å—á—ë—Ç—ã")],
        [KeyboardButton("üí° –°–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏")],
        [KeyboardButton("üì¶ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã")],
    ],
    resize_keyboard=True,
)

cancel_back_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
    ],
    resize_keyboard=True,
)

densities = {
    "100": "–õ–µ–≥–∫–∏–π (–¥–ª—è –¥—Ä–µ–Ω–∞–∂–∞, –¥–æ—Ä–æ–∂–µ–∫) ‚Äî 100 –≥/–º¬≤",
    "150": "–°—Ä–µ–¥–Ω–∏–π (–¥–ª—è –ø–∞—Ä–∫–æ–≤–æ–∫, –æ—Ç–º–æ—Å—Ç–æ–∫) ‚Äî 150 –≥/–º¬≤",
    "200": "–¢—è–∂–µ–ª—ã–π (–¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –≥—Ä—É–Ω—Ç–∞) ‚Äî 200 –≥/–º¬≤",
    "250": "–û—á–µ–Ω—å —Ç—è–∂–µ–ª—ã–π (–¥–ª—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏) ‚Äî 250 –≥/–º¬≤",
    "300": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π (–¥–ª—è —Å–∞–º—ã—Ö —Ç—è–∂–µ–ª—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫) ‚Äî 300 –≥/–º¬≤"
}

@dp.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb)

if __name__ == "__main__":
    import asyncio
    os.makedirs("data", exist_ok=True)
    asyncio.run(dp.start_polling(bot))
